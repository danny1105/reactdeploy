{"version":3,"sources":["components/logo.svg","firebase/firebase.js","firebase/auth.js","firebase/db.js","constants/routes.js","components/SignOut.js","components/AuthUserContext.js","components/Navigation.js","components/Landing.js","components/SignUp.js","components/PasswordForget.js","components/SignIn.js","components/withAuthorization.js","components/Home.js","components/PasswordChange.js","components/Account.js","components/App.js","components/withAuthentication.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","auth","facebookProvider","FacebookAuthProvider","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordChange","currentUser","updatePassword","doFacebookSignIn","signInWithPopup","doCreateUser","id","username","ref","concat","set","onceGetUsers","once","doGetAnUnser","uid","HOME","SignOutButton","react_default","a","createElement","reactstrap_es","color","onClick","AuthUserContext","React","createContext","NavigationNonAuth","light","expand","Link","to","className","navbar","components_Navigation","components_AuthUserContext","Consumer","authUser","Navigation_NavigationAuth","userInfo","Navigation_NavigationNonAuth","NavigationAuth","_ref","routes","providerData","providerId","SignOut","LandingPage","INITIAL_STATE","passwordOne","passwordTwo","error","showingAlert","byPropKey","propertyName","value","Object","defineProperty","SignUpForm","state","onSubmit","event","_this$state","_this","history","props","then","user","setState","objectSpread","push","catch","timer","err","preventDefault","setTimeout","_this2","this","_this$state2","isInvalid","onLoad","message","for","type","name","placeholder","onChange","e","target","disabled","Component","SignUpLink","withRouter","SignUp_SignUpForm","PasswordForgetForm","PasswordForgetLink","PasswordForget","PasswordForget_PasswordForgetForm","SignInForm","facebookLogin","console","log","displayName","lib","SignIn","SignIn_SignInForm","SignUp_SignUpLink","PasswordForget_PasswordForgetLink","withAuthorization","authCondition","WithAuthorization","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","onAuthStateChanged","assign","loggedUser","HomePage","users","loading","res","val","style","marginTop","PasswordChangeForm","doPasswordUpdate","PasswordChange","withAuthentication","WithAuthentication","_getPrototypeOf2","_len","args","Array","_key","call","Provider","BrowserRouter","Route","exact","path","component","SignUpPage","SignInPage","PasswordForgetPage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.875c1b14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\n//this config is being used for both development and production environment. Though, it is a best practice creating a second project and have two configs: one for production (prodConfig) and another for development (devConfig), so you choose the config based on the environment.\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBEj1oQCSBuyJDHAJEKe6E4__Q9cGzNmi8\",\r\n  authDomain: \"redditauth-73060.firebaseapp.com\",\r\n  databaseURL: \"https://redditauth-73060.firebaseio.com\",\r\n  projectId: \"redditauth-73060\",\r\n  storageBucket: \"redditauth-73060.appspot.com\",\r\n  messagingSenderId: \"281425140515\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  //initializing with the config object\r\n  firebase.initializeApp(config);\r\n}\r\n\r\n//separting database API and authentication\r\nconst db = firebase.database();\r\nconst auth = firebase.auth();\r\n\r\nconst facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nexport { db, auth, facebookProvider };\r\n","import { auth, facebookProvider } from \"./firebase\"; //importing the previously instatiated object from the firebase.js config file\r\n\r\n//## below the authentication functions ##\r\n\r\n//sign up\r\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\r\n  auth.createUserWithEmailAndPassword(email, password);\r\n\r\n//sign in\r\nexport const doSignInWithEmailAndPassword = (email, password) =>\r\n  auth.signInWithEmailAndPassword(email, password);\r\n\r\n//sign out\r\nexport const doSignOut = () => auth.signOut();\r\n\r\n//## below are two more functions, for resetting or changing passwords ##\r\n\r\n//password reset\r\nexport const doPasswordReset = email => auth.sendPasswordResetEmail(email);\r\n\r\n//password change\r\nexport const doPasswordChange = password =>\r\n  auth.currentUser.updatePassword(password);\r\n\r\n//#### for\r\n//     facebook #####\r\nexport const doFacebookSignIn = () => auth.signInWithPopup(facebookProvider);\r\n","//this is going to store Firebase realtime database API code\r\nimport { db } from \"./firebase\";\r\n\r\n//##########3 user API\r\n\r\n//create an user and store it at users/id path (it's an asynchronous func)\r\nexport const doCreateUser = (id, username, email) =>\r\n  db.ref(`users/${id}`).set({\r\n    username,\r\n    email\r\n  });\r\n\r\n//returns all users from firebase realtime db\r\nexport const onceGetUsers = () => db.ref(\"users\").once(\"value\");\r\n\r\nexport const doGetAnUnser = uid => db.ref(`users/${uid}`).once(\"value\");\r\n\r\n// other APIs could come below\r\n","export const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const LANDING = \"/\";\r\nexport const HOME = \"/home\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\n","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport { auth } from \"../firebase\";\r\n\r\nconst SignOutButton = () => (\r\n  <Button color=\"info\" onClick={auth.doSignOut}>\r\n    Sign Out\r\n  </Button>\r\n);\r\n\r\nexport default SignOutButton;\r\n","import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null); //using React's Context API\r\n\r\nexport default AuthUserContext;\r\n","import React from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport SignOutButton from \"./SignOut\";\r\nimport * as routes from \"../constants/routes\";\r\n\r\nimport AuthUserContext from \"./AuthUserContext\";\r\n\r\nconst Navigation = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser =>\r\n      authUser ? <NavigationAuth userInfo={authUser} /> : <NavigationNonAuth />\r\n    }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <Navbar color=\"light\" light expand=\"md\">\r\n    <NavbarBrand>\r\n      <Link to={routes.LANDING}> Landing </Link>\r\n    </NavbarBrand>\r\n    <Nav className=\"ml-auto\" navbar>\r\n      <NavItem>\r\n        <NavLink>\r\n          <Link to={routes.SIGN_IN}>Sign In</Link>\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  </Navbar>\r\n);\r\n\r\nexport default Navigation;\r\n\r\nconst NavigationAuth = ({ userInfo }) => (\r\n  <Navbar color=\"light\" light expand=\"md\">\r\n    <NavbarBrand>\r\n      <Link to={routes.LANDING}> Landing </Link>\r\n    </NavbarBrand>\r\n    <Nav className=\"ml-auto\" navbar>\r\n      <NavItem>\r\n        <NavLink>\r\n          <Link to={routes.HOME}>Home</Link>\r\n        </NavLink>\r\n      </NavItem>\r\n      {userInfo.providerData[0].providerId === \"facebook.com\" ? null : (\r\n        <NavItem>\r\n          <NavLink>\r\n            <Link to={routes.ACCOUNT}>Account</Link>\r\n          </NavLink>\r\n        </NavItem>\r\n      )}\r\n      <NavItem>\r\n        <SignOutButton />\r\n      </NavItem>\r\n    </Nav>\r\n  </Navbar>\r\n);\r\n\r\n// const NavigationAuth = ({ userInfo }) => (\r\n//   <ul>\r\n//     {/* {console.log(\"NavigationAuth\", userInfo)} */}\r\n//     <li>\r\n//       <Link to={routes.LANDING}>Landing</Link>\r\n//     </li>\r\n//     <li>\r\n//       <Link to={routes.HOME}>Home</Link>\r\n//     </li>\r\n//     {/* disabling password changes/resets if user is logged in through facebook */}\r\n//     {userInfo.providerData[0].providerId === \"facebook.com\" ? null : (\r\n//       <li>\r\n//         <Link to={routes.ACCOUNT}>Account</Link>\r\n//       </li>\r\n//     )}\r\n//     <li>\r\n//       <SignOutButton />\r\n//     </li>\r\n//   </ul>\r\n// );\r\n\r\n// const NavigationNonAuth = () => (\r\n//   <ul>\r\n//     <li>\r\n//       <Link to={routes.LANDING}>Landing</Link>\r\n//     </li>\r\n//     <li>\r\n//       <Link to={routes.SIGN_IN}>Sign In</Link>\r\n//     </li>\r\n//   </ul>\r\n// );\r\n","import React from \"react\";\r\n\r\nconst LandingPage = () => (\r\n  <div>\r\n    <h1>Landing Page</h1>\r\n\r\n    <p>This page is public, accessible by everyone</p>\r\n\r\n    <p>\r\n      This page is like a homepage. More animations and styling coming soon...\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\r\n\r\nimport * as routes from \"../constants/routes\";\r\nimport { auth, db } from \"../firebase\";\r\n\r\nconst SignUpPage = ({ history }) => (\r\n  <div>\r\n    <div className=\"div-flex\">\r\n      <div>\r\n        <h1 className=\"centered\">Sign Up</h1>\r\n        <SignUpForm history={history} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n//################### Sign Up Form ###################\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null,\r\n  showingAlert: false\r\n};\r\n\r\n//A Higher order function with prop name as key and the value to be assigned to\r\nconst byPropKey = (propertyName, value) => () => ({\r\n  [propertyName]: value\r\n});\r\n\r\nclass SignUpForm extends Component {\r\n  //defining state\r\n  state = {\r\n    ...INITIAL_STATE\r\n  };\r\n\r\n  // onChange = (propName, value) => {\r\n  //   this.setState({\r\n  //     [propName]: value\r\n  //   });\r\n  // };\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n    const { history } = this.props;\r\n    auth\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      //it the above functions resolves, reset the state to its initial state values, otherwise, set the error object\r\n      .then(authUser => {\r\n        //creating a user in the database after the sign up through Firebase auth API\r\n        db.doCreateUser(authUser.user.uid, username, email)\r\n          .then(() => {\r\n            this.setState({\r\n              ...INITIAL_STATE\r\n            });\r\n            history.push(routes.HOME); //redirects to Home Page\r\n          })\r\n          .catch(error => {\r\n            this.setState(byPropKey(\"error\", error));\r\n            this.timer(); //show alert message for some seconds\r\n          });\r\n      })\r\n      .catch(err => {\r\n        this.setState(byPropKey(\"error\", err));\r\n        this.timer(); //show alert message for some seconds\r\n      });\r\n\r\n    event.preventDefault(); //prevents refreshing\r\n  };\r\n\r\n  timer = () => {\r\n    this.setState({\r\n      showingAlert: true\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        showingAlert: false\r\n      });\r\n    }, 4000);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      error,\r\n      showingAlert\r\n    } = this.state;\r\n    //a boolen to perform validation\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <div>\r\n        {showingAlert && (\r\n          <Alert color=\"danger\" onLoad={this.timer}>\r\n            {error.message}\r\n          </Alert>\r\n        )}\r\n        <Form onSubmit={this.onSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"userName\">Full Name</Label>\r\n            <Input\r\n              type=\"username\"\r\n              name=\"username\"\r\n              id=\"userName\"\r\n              placeholder=\"Enter your Full Name\"\r\n              value={username}\r\n              onChange={e =>\r\n                this.setState(byPropKey(\"username\", e.target.value))\r\n              }\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"exampleEmail\">Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"exampleEmail\"\r\n              placeholder=\"Enter your Email\"\r\n              value={email}\r\n              onChange={e => this.setState(byPropKey(\"email\", e.target.value))}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword1\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword1\"\r\n              placeholder=\"Enter Your Password\"\r\n              value={passwordOne}\r\n              onChange={e =>\r\n                this.setState(byPropKey(\"passwordOne\", e.target.value))\r\n              }\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword2\">Confirm Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword2\"\r\n              placeholder=\"Confirm Password\"\r\n              value={passwordTwo}\r\n              onChange={e =>\r\n                this.setState(byPropKey(\"passwordTwo\", e.target.value))\r\n              }\r\n            />\r\n          </FormGroup>\r\n\r\n          <div className=\"text-center\">\r\n            <Button disabled={isInvalid} type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//################### Sign Up Link ###################\r\n//used in the sign in when the user don't have an account registered yet\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={routes.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\n//exports\r\nexport default withRouter(SignUpPage); //using a HoC to get access to history\r\nexport { SignUpForm, SignUpLink };\r\n\r\n// <form onSubmit={this.onSubmit}>\r\n//   <input\r\n//     value={username}\r\n//     onChange={e => this.setState(byPropKey(\"username\", e.target.value))}\r\n//     // onChange={e => this.onChange(\"username\", e.target.value)}\r\n//     type=\"text\"\r\n//     placeholder=\"Full Name\"\r\n//   />\r\n//   <input\r\n//     value={email}\r\n//     onChange={e => this.setState(byPropKey(\"email\", e.target.value))}\r\n//     type=\"text\"\r\n//     placeholder=\"Email Address\"\r\n//   />\r\n//   <input\r\n//     value={passwordOne}\r\n//     onChange={e =>\r\n//       this.setState(byPropKey(\"passwordOne\", e.target.value))\r\n//     }\r\n//     type=\"password\"\r\n//     placeholder=\"Password\"\r\n//   />\r\n//   <input\r\n//     value={passwordTwo}\r\n//     onChange={e =>\r\n//       this.setState(byPropKey(\"passwordTwo\", e.target.value))\r\n//     }\r\n//     type=\"password\"\r\n//     placeholder=\"Confirm Password\"\r\n//   />\r\n//   <button disabled={isInvalid} type=\"submit\">\r\n//     Sign Up\r\n//   </button>\r\n\r\n//   {error && <p>{error.message}</p>}\r\n// </form>\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\r\n\r\nimport { auth } from \"../firebase\";\r\nimport * as routes from \"../constants/routes\";\r\n\r\n//it resets your password. It doesn’t matter if you are authenticated or not\r\nconst PasswordForgetPage = () => (\r\n  <div className=\"div-flex\">\r\n    <div>\r\n      <h1 className=\"centered\">Forget Password</h1>\r\n      <PasswordForgetForm />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n  [propertyName]: value\r\n});\r\n\r\n//################### PasswordForget Form ###################\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null,\r\n  showingAlert: false\r\n};\r\n\r\nclass PasswordForgetForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    auth\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState(byPropKey(\"error\", error));\r\n        this.timer(); //show alert message for some seconds\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  timer = () => {\r\n    this.setState({\r\n      showingAlert: true\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        showingAlert: false\r\n      });\r\n    }, 4000);\r\n  };\r\n\r\n  render() {\r\n    const { email, error, showingAlert } = this.state;\r\n\r\n    const isInvalid = email === \"\";\r\n\r\n    return (\r\n      <div>\r\n        {showingAlert && (\r\n          <Alert color=\"danger\" onLoad={this.timer}>\r\n            {error.message}\r\n          </Alert>\r\n        )}\r\n\r\n        <Form onSubmit={this.onSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"exampleEmail\">Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"exampleEmail\"\r\n              placeholder=\"Enter you Email\"\r\n              value={email}\r\n              onChange={event =>\r\n                this.setState(byPropKey(\"email\", event.target.value))\r\n              }\r\n            />\r\n          </FormGroup>\r\n\r\n          <div className=\"text-center\">\r\n            <Button disabled={isInvalid} type=\"submit\">\r\n              Reset My Password\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//################### PasswordForget Link ###################\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={routes.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n\r\n// <form onSubmit={this.onSubmit}>\r\n//   <input\r\n//     value={this.state.email}\r\n//     onChange={event =>\r\n//       this.setState(byPropKey(\"email\", event.target.value))\r\n//     }\r\n//     type=\"text\"\r\n//     placeholder=\"Email Address\"\r\n//   />\r\n//   <button disabled={isInvalid} type=\"submit\">\r\n//     Reset My Password\r\n//   </button>\r\n\r\n//   {error && <p>{error.message}</p>}\r\n// </form>\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\r\nimport { FacebookLoginButton } from \"react-social-login-buttons\";\r\nimport logo from \"./logo.svg\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { SignUpLink } from \"./SignUp\";\r\nimport { PasswordForgetLink } from \"./PasswordForget\";\r\nimport { auth, db } from \"../firebase\";\r\nimport * as routes from \"../constants/routes\";\r\n\r\nconst SignInPage = ({ history }) => {\r\n  return (\r\n    <div className=\"div-flex\">\r\n      <div>\r\n        <h1 className=\"centered\">Sign In</h1>\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"My logo\" /> */}\r\n\r\n        <SignInForm history={history} />\r\n        <SignUpLink />\r\n        <PasswordForgetLink />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n  [propertyName]: value\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null,\r\n  showingAlert: false\r\n};\r\n\r\nclass SignInForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    const { history } = this.props;\r\n\r\n    auth\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        history.push(routes.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState(byPropKey(\"error\", error));\r\n        this.timer(); //defined below\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    const { history } = this.props;\r\n    auth\r\n      .doFacebookSignIn()\r\n      .then(authUser => {\r\n        console.log(\"authUser\", authUser);\r\n\r\n        db.doCreateUser(\r\n          //store some info from facebook into the firebase db\r\n          authUser.user.uid,\r\n          authUser.user.displayName,\r\n          authUser.user.email\r\n        )\r\n          .then(() => {\r\n            // this.setState({\r\n            //   ...INITIAL_STATE\r\n            // });\r\n            history.push(routes.HOME); //redirects to Home Page\r\n          })\r\n          .catch(error => {\r\n            this.setState(byPropKey(\"error\", error));\r\n          });\r\n      })\r\n      .catch(error => {\r\n        this.setState(byPropKey(\"error\", error));\r\n      });\r\n  };\r\n\r\n  timer = () => {\r\n    this.setState({\r\n      showingAlert: true\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        showingAlert: false\r\n      });\r\n    }, 4000);\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error, showingAlert } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <div>\r\n        {showingAlert && (\r\n          <Alert color=\"danger\" onLoad={this.timer}>\r\n            {error.message}\r\n          </Alert>\r\n        )}\r\n\r\n        <Form onSubmit={this.onSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"exampleEmail\">Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"exampleEmail\"\r\n              placeholder=\"Enter your Email\"\r\n              value={email}\r\n              onChange={event =>\r\n                this.setState(byPropKey(\"email\", event.target.value))\r\n              }\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword\"\r\n              placeholder=\"Enter your Password\"\r\n              value={password}\r\n              onChange={event =>\r\n                this.setState(byPropKey(\"password\", event.target.value))\r\n              }\r\n            />\r\n          </FormGroup>\r\n\r\n          <div className=\"text-center\">\r\n            <Button disabled={isInvalid} type=\"submit\">\r\n              Sign In\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n\r\n        <hr />\r\n\r\n        <FacebookLoginButton onClick={this.facebookLogin} />\r\n        {/* <button onClick={this.facebookLogin}>Login with Facebook</button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignInPage);\r\n\r\nexport { SignInForm };\r\n\r\n{\r\n  /* <form onSubmit={this.onSubmit} className=\"center-form\">\r\n          <input\r\n            value={email}\r\n            onChange={event =>\r\n              this.setState(byPropKey(\"email\", event.target.value))\r\n            }\r\n            type=\"text\"\r\n            placeholder=\"Email Address\"\r\n          />\r\n          <input\r\n            value={password}\r\n            onChange={event =>\r\n              this.setState(byPropKey(\"password\", event.target.value))\r\n            }\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <button disabled={isInvalid} type=\"submit\">\r\n            Sign In\r\n          </button>\r\n\r\n          {error && <p>{error.message}</p>}\r\n        </form> */\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport AuthUserContext from \"./AuthUserContext\";\r\nimport { firebase } from \"../firebase\";\r\nimport * as routes from \"../constants/routes\";\r\n\r\nconst withAuthorization = authCondition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      firebase.auth.onAuthStateChanged(authUser => {\r\n        if (!authCondition(authUser)) {\r\n          //if the authorization fails, redirects to sign in page\r\n          this.props.history.push(routes.SIGN_IN);\r\n        }\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {/* it either renders the passed component or not */}\r\n          {authUser =>\r\n            authUser ? (\r\n              <Component {...this.props} loggedUser={authUser} />\r\n            ) : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withRouter(WithAuthorization); //using withRouter so we have access to history props\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React, { Component } from \"react\";\r\n\r\nimport withAuthorization from \"./withAuthorization\";\r\nimport { db } from \"../firebase\";\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    users: null,\r\n    username: \"\",\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    // db.onceGetUsers().then(res => {\r\n    //   this.setState({\r\n    //     users: res.val()\r\n    //   });\r\n    // });\r\n\r\n    const { loggedUser } = this.props;\r\n    db.doGetAnUnser(loggedUser.uid).then(res => {\r\n      this.setState({\r\n        username: res.val().username,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { users, username, loading } = this.state;\r\n    // console.log(\"dasdf\", this.props.loggedUser);\r\n    return (\r\n      <div>\r\n        <h1>Home</h1>\r\n        {!loading && <p className=\"centered\">Hello {username}!</p>}\r\n\r\n        <p style={{ marginTop: \"80px\" }}>\r\n          NOTE: This page is only accessible by signed in users.\r\n        </p>\r\n        {/* {!!users && <UserList users={users} />} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const UserList = ({ users }) => (\r\n//   <div>\r\n//     {console.log(\"users\", users)}\r\n//     <h2>List of Usernames of Users</h2>\r\n//     <p>(Saved on Sign Up in Firebase Database)</p>\r\n\r\n//     {Object.keys(users).map(key => (\r\n//       <div key={key}>{users[key].username}</div>\r\n//     ))}\r\n//   </div>\r\n// );\r\n\r\nconst authCondition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(authCondition)(HomePage); //grants authorization to open endpoint if an user is signed in\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\r\n\r\nimport { auth } from \"../firebase\";\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n  [propertyName]: value\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null,\r\n  showingAlert: false\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    auth\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState(byPropKey(\"error\", error));\r\n        this.timer(); //show alert message for some seconds\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  timer = () => {\r\n    this.setState({\r\n      showingAlert: true\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        showingAlert: false\r\n      });\r\n    }, 4000);\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error, showingAlert } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n\r\n    return (\r\n      <div style={{ marginTop: \"40px\" }}>\r\n        {showingAlert && (\r\n          <Alert color=\"danger\" onLoad={this.timer}>\r\n            {error.message}\r\n          </Alert>\r\n        )}\r\n\r\n        <Form onSubmit={this.onSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword1\">New Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword1\"\r\n              placeholder=\"New Password\"\r\n              value={passwordOne}\r\n              onChange={e =>\r\n                this.setState(byPropKey(\"passwordOne\", e.target.value))\r\n              }\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword2\">Confirm Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword2\"\r\n              placeholder=\"Confirm Password\"\r\n              value={passwordTwo}\r\n              onChange={e =>\r\n                this.setState(byPropKey(\"passwordTwo\", e.target.value))\r\n              }\r\n            />\r\n          </FormGroup>\r\n\r\n          <div className=\"text-center\">\r\n            <Button disabled={isInvalid} type=\"submit\">\r\n              Change My Password\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordChangeForm;\r\n\r\n// <form onSubmit={this.onSubmit}>\r\n//   <input\r\n//     value={passwordOne}\r\n//     onChange={event =>\r\n//       this.setState(byPropKey(\"passwordOne\", event.target.value))\r\n//     }\r\n//     type=\"password\"\r\n//     placeholder=\"New Password\"\r\n//   />\r\n//   <input\r\n//     value={passwordTwo}\r\n//     onChange={event =>\r\n//       this.setState(byPropKey(\"passwordTwo\", event.target.value))\r\n//     }\r\n//     type=\"password\"\r\n//     placeholder=\"Confirm New Password\"\r\n//   />\r\n//   <button disabled={isInvalid} type=\"submit\">\r\n//     Change My Password\r\n//   </button>\r\n\r\n//   {error && <p>{error.message}</p>}\r\n// </form>\r\n","import React from \"react\";\r\n\r\nimport AuthUserContext from \"./AuthUserContext\";\r\nimport { PasswordForgetForm } from \"./PasswordForget\";\r\nimport PasswordChangeForm from \"./PasswordChange\";\r\nimport withAuthorization from \"./withAuthorization\"; //redirects to sign in if user not signed in\r\n\r\nconst AccountPage = () => (\r\n  //authUser is passed down via Context API (It is set at withAuthentication.js file)\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div className=\"div-flex\">\r\n        <div>\r\n          <h5 className=\"centered\">\r\n            Change/Reset Password for : {authUser.email}\r\n          </h5>\r\n          {/* disabling password changes/resets if user is logged in through facebook */}\r\n          {authUser.providerData[0].providerId === \"facebook.com\" ? null : (\r\n            <div>\r\n              <PasswordForgetForm />\r\n              <PasswordChangeForm />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst authCondition = authUser =>\r\n  !!authUser && authUser.providerData[0].providerId !== \"facebook.com\"; //true and false\r\n\r\nexport default withAuthorization(authCondition)(AccountPage);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport \"./App.css\";\r\n\r\nimport { firebase } from \"../firebase\";\r\nimport * as routes from \"../constants/routes\";\r\n\r\n//nav stuff\r\nimport Navigation from \"./Navigation\";\r\nimport LandingPage from \"./Landing\";\r\nimport SignUpPage from \"./SignUp\";\r\nimport SignInPage from \"./SignIn\";\r\nimport PasswordForgetPage from \"./PasswordForget\";\r\nimport HomePage from \"./Home\";\r\nimport AccountPage from \"./Account\";\r\n\r\nimport withAuthentication from \"./withAuthentication\";\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <Container>\r\n      <Navigation />\r\n\r\n      <Route exact path={routes.LANDING} component={LandingPage} />\r\n      <Route exact path={routes.SIGN_UP} component={SignUpPage} />\r\n      <Route exact path={routes.SIGN_IN} component={SignInPage} />\r\n      <Route\r\n        exact\r\n        path={routes.PASSWORD_FORGET}\r\n        component={PasswordForgetPage}\r\n      />\r\n      <Route exact path={routes.HOME} component={HomePage} />\r\n      <Route exact path={routes.ACCOUNT} component={AccountPage} />\r\n    </Container>\r\n  </BrowserRouter>\r\n);\r\n\r\n// class App extends Component {\r\n//   //holds info about if an user is signed in or not\r\n//   state = {\r\n//     authUser: null\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     //a listener for the authenticated user\r\n//     //if the user signs out, the authUser becomes null\r\n//     firebase.auth.onAuthStateChanged(authUser => {\r\n//       authUser\r\n//         ? this.setState({ authUser })\r\n//         : this.setState({ authUser: null });\r\n//     });\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       // <div className=\"App\">\r\n//       <BrowserRouter>\r\n//         <div>\r\n//           <Navigation authUser={this.state.authUser} />\r\n\r\n//           <hr />\r\n\r\n//           <Route exact path={routes.LANDING} component={LandingPage} />\r\n//           <Route exact path={routes.SIGN_UP} component={SignUpPage} />\r\n//           <Route exact path={routes.SIGN_IN} component={SignInPage} />\r\n//           <Route\r\n//             exact\r\n//             path={routes.PASSWORD_FORGET}\r\n//             component={PasswordForgetPage}\r\n//           />\r\n//           <Route exact path={routes.HOME} component={HomePage} />\r\n//           <Route exact path={routes.ACCOUNT} component={AccountPage} />\r\n//         </div>\r\n//       </BrowserRouter>\r\n//       // </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\nexport default withAuthentication(App); //using HoC to handle session\r\n","import React from \"react\";\r\nimport { firebase } from \"../firebase\";\r\n\r\nimport AuthUserContext from \"./AuthUserContext\"; //using provider's context api\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    state = {\r\n      authUser: null\r\n    };\r\n\r\n    componentDidMount() {\r\n      firebase.auth.onAuthStateChanged(authUser => {\r\n        authUser\r\n          ? this.setState({ authUser })\r\n          : this.setState({ authUser: null });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const { authUser } = this.state;\r\n      console.log(\"withAuthentication file authUser\", authUser);\r\n      return (\r\n        //   passing down the authUser value, so other components can consume it\r\n        <AuthUserContext.Provider value={authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return WithAuthentication;\r\n};\r\n\r\nexport default withAuthentication;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}